class Solution {
    public int[] twoSum(int[] nums, int target) {
        /*
        Map<Integer, Integer> map = new HashMap<>();
        // 记录map
        for (int i=0; i<nums.length; i++) {
            map.put(nums[i], i);
        }
        
        Arrays.sort(nums);
        
        int lo = 0, hi = nums.length - 1;
        
        while(lo < hi) {
            int sum = nums[lo] + nums[hi];
            if (sum < target) {
                lo++;
            } else if (sum > target) {
                hi--;
            } else if (sum == target){
                return new int[]{map.get(nums[lo]), map.get(nums[hi])};
            }
        }
        return new int[]{};
        */
        Map<Integer, Integer> map = new HashMap<>();
        for (int i=0; i<nums.length; i++) {
            if (map.containsKey(target - nums[i])) {
                return new int[]{map.get(target-nums[i]), i};
            }
            map.put(nums[i], i);
        }
        return new int[]{};
    }
}
//runtime:2 ms
//memory:41.6 MB
